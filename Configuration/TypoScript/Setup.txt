
// Default smarty configuration
plugin.smarty {

    // By default smarty cache and compile dirs are located in the typo3temp directory
    cache_dir = typo3temp/smarty_cache/
    compile_dir = typo3temp/smarty_compile/

    // By setting $merge_compiled_includes to TRUE Smarty will merge the compiled template
    // code of subtemplates into the compiled code of the main template.
    // This increases rendering speed of templates using a many different sub-templates.
    merge_compiled_includes = true

    // The Smarty delimiter tags { and } will be ignored so long as they are surrounded by white space.
    // This behavior can be disabled by setting auto_literal to false.
    auto_literal = true

    // This tells Smarty how to handle PHP code embedded in the templates.
    // There are four possible settings, the default being Smarty::PHP_PASSTHRU.
    // @see http://www.smarty.net/docs/en/variable.php.handling.tpl
    php_handling = Smarty::PHP_PASSTHRU

    // If set to true, Smarty will respect the If-Modified-Since header sent from the client.
    // If the cached file timestamp has not changed since the last visit, then a '304: Not Modified'
    // header will be sent instead of the content.
    cache_modified_check = true

    // Cache locking avoids concurrent cache generation. This means resource intensive pages can be
    // generated only once, even if they've been requested multiple times in the same moment.
    cache_locking = true

    // This tells Smarty whether or not to cache the output of the templates. A value of 0 or Smarty::CACHING_OFF
    // will cause the cache to always regenerate. A value of Smarty::CACHING_LIFETIME_CURRENT tells Smarty to use the
    // current $cache_lifetime variable to determine if the cache has expired. A value of Smarty::CACHING_LIFETIME_SAVED
    // tells Smarty to use the $cache_lifetime value at the time the cache was generated. This way you can set the
    // $cache_lifetime just before fetching the template to have granular control over when that particular cache expires.
    caching = Smarty::CACHING_OFF

    // This is the length of time in seconds that a template cache is valid. Once this time has expired,
    // the cache will be regenerated. A value of -1 will force the cache to never expire. A value of 1 will set the
    // cache lifetime to the configured time-to-live time for TYPO3 cached pages.
    cache_lifetime = 1

    // Smarty will create subdirectories under the compiled templates and cache directories if set to true
    use_sub_dirs = true

    // php error_reporting level inside of display() and fetch()
    error_reporting = E_ALL & ~E_DEPRECATED & ~E_NOTICE & ~E_WARNING

    // mutes expected warnings and notices deliberately generated by Smarty
    // @see http://www.smarty.net/docs/en/api.mute.expected.errors.tpl
    mute_errors = true

    // Makes Smarty regenerate the template each time the script is called.
    // Can be set to true for development and debugging purposes
    force_compile = false

    // Upon each invocation of the PHP application, Smarty tests to see if the current template has changed
    // (different timestamp) since the last time it was compiled. If it has changed, it recompiles that template.
    // If the template has yet not been compiled at all, it will compile regardless of this setting.
    // @see http://www.smarty.net/docs/en/variable.compile.check.tpl
    compile_check = Smarty::COMPILECHECK_CACHEMISS

    // Settings applied in a development environment context.
    development {

        // php error_reporting level inside of display() and fetch()
        error_reporting = E_ALL & ~E_NOTICE

        // Prevents muting of errors
        mute_errors = false

        // Makes Smarty regenerate the template each time the script is called.
        // Can be set to true for development and debugging purposes
        force_compile = true

        // This forces Smarty to (re)cache templates on every invocation. It does not override
        // the caching level, but merely pretends the template has never been cached before.
        force_cache = true
    }
}